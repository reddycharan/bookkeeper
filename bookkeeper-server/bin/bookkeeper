#!/usr/bin/env bash
#
#/**
# * Copyright 2007 The Apache Software Foundation
# *
# * Licensed to the Apache Software Foundation (ASF) under one
# * or more contributor license agreements.  See the NOTICE file
# * distributed with this work for additional information
# * regarding copyright ownership.  The ASF licenses this file
# * to you under the Apache License, Version 2.0 (the
# * "License"); you may not use this file except in compliance
# * with the License.  You may obtain a copy of the License at
# *
# *     http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# */

# check if net.ipv6.bindv6only is set to 1
bindv6only=$(/sbin/sysctl -n net.ipv6.bindv6only 2> /dev/null)
if [ -n "$bindv6only" ] && [ "$bindv6only" -eq "1" ]
then
  echo "Error: \"net.ipv6.bindv6only\" is set to 1 - Java networking could be broken"
  echo "For more info (the following page also applies to bookkeeper): http://wiki.apache.org/hadoop/HadoopIPv6"
  exit 1
fi

BINDIR=`dirname "$0"`
BK_HOME=`cd $BINDIR/..;pwd`

DEFAULT_VERSION=0.0
# the default cluster name is used for the config value only for dev local machines like one box.
DEFAULT_CLUSTER_NAME=LOCALBOX
DEFAULT_CONF=$BK_HOME/conf/bk_server.conf
DEFAULT_REPLICATION_CONF=$BK_HOME/conf/bk_replication.conf
DEFAULT_LOG_CONF=$BK_HOME/conf/log4j2.server.xml
# this default config dir should match the 'localBookiesConfigDirectory' config value in the conf file of LocalBookKeeper
DEFAULT_LOCALBOOKIES_CONFIG_DIR=/tmp/localbookies-config

bookkeeper_help() {
    cat <<EOF
Usage: bookkeeper <command>
where command is one of:
    bookie         	Run a bookie server
    autorecovery   	Run AutoRecovery service daemon
    localbookie <n>	Run a test ensemble of <n> bookies locally
    upgrade        	Upgrade bookie filesystem
    shell 		Run shell for admin commands
    jmx 		Run jmx operations
    help                This help message

or command is the full name of a class with a defined main() method.

Environment variables:
   SFSTORE_CLUSTER_NAME        	The full cluster name including DC and SP
   BOOKIE_VERSION        	Version of the current bits
   BOOKIE_LOG_CONF        	Log4j configuration file (default $DEFAULT_LOG_CONF)
   BOOKIE_CONF            	Configuration file (default: $DEFAULT_CONF)
   BOOKIE_EXTRA_OPTS      	Extra options to be passed to the jvm
   BOOKIE_EXTRA_CLASSPATH 	Add extra paths to the bookkeeper classpath
   BOOKIE_PID_DIR         	Folder where the Bookie server PID file should be stored
   BOOKIE_STOP_TIMEOUT    	Wait time before forcefully kill the Bookie server instance, if the stop is not successful

These variable can also be set in conf/bkenv.sh
EOF
}


jmx_help() {
    cat <<EOF
Usage: bookkeeper jmx [-localbookie <host:port>] <command>
where command is one of:
    forcecompaction
    suspendmajorgc
    suspendminorgc
    resumeminorgc
    resumemajorgc
    flushbookie
    openfilelimit
    pagelimit
    pagesize
    pagecount
    numopenledgers
    help
EOF
}

# if no args specified, show usage
if [ $# = 0 ]; then
    bookkeeper_help;
    exit 1;
fi

# get arguments
COMMAND=$1
shift

ENV_TYPE="dev"
if [ "$1" == "dev" ] || [ "$1" == "vpod" ] || [ "$1" == "prod" ]; then
    ENV_TYPE="$1"
    shift
fi

#Source the correct environment variables depending on environment
if [[ $ENV_TYPE == "dev" ]]; then
    source $BK_HOME/conf/bkenv.sh
elif [[ $ENV_TYPE == "prod" ]]; then
    source $BK_HOME/conf/bkenv.prod.sh
elif [[ $ENV_TYPE == "vpod" ]]; then
    source $BK_HOME/conf/bkenv.vpod.sh
fi

if [ "x$JMX_PORT_NUM" != "x" ]
then
    JMX_ARGS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=$JMX_PORT_NUM -Dcom.sun.management.jmxremote.local.only=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
fi

# Check for the java to use
if [[ -z $JAVA_HOME ]]; then
  JAVA=$(which java)
  if [ $? = 0 ]; then
    echo "JAVA_HOME not set, using java from PATH. ($JAVA)"
  else
    echo "Error: JAVA_HOME not set, and no java executable found in $PATH." 1>&2
    exit 1
  fi
else
  JAVA=$JAVA_HOME/bin/java
fi

# exclude tests jar
RELEASE_JAR=$(ls ${BK_HOME}/bookkeeper-server-*.jar 2> /dev/null | grep -v tests | tail -1)
if [ -n "${RELEASE_JAR}" ]; then
  BOOKIE_JAR=$RELEASE_JAR
fi

# exclude tests jar
BUILT_JAR=$(ls ${BK_HOME}/target/bookkeeper-server-*.jar 2> /dev/null | grep -v tests | tail -1)

if [ -z "${BUILT_JAR}" ] && [ -z "${BOOKIE_JAR}" ]; then
  echo "Couldn't find bookkeeper jar."
  read -p "Do you want me to run \`mvn package -DskiptTests\` for you ? " answer
  case "${answer:0:1}" in
    y|Y )
      mvn package -DskipTests
      ;;
    * )
      exit 1
      ;;
  esac

  BUILT_JAR=$(ls ${BK_HOME}/target/bookkeeper-server-*.jar 2> /dev/null | grep -v tests | tail -1)
  if [ -n "${BUILT_JAR}" ]; then
    BOOKIE_JAR=$BUILT_JAR
  fi
fi

if [ -e "${BUILT_JAR}" ]; then
  BOOKIE_JAR="${BUILT_JAR}"
fi

if [ ! -e "${BOOKIE_JAR}" ]; then
  echo "Could not find bookkeeper jar."
  exit 1
fi

add_maven_deps_to_classpath() {
  MVN="mvn"
  if [ "$MAVEN_HOME" != "" ]; then
    MVN=${MAVEN_HOME}/bin/mvn
  fi

  # Need to generate classpath from maven pom. This is costly so generate it
  # and cache it. Save the file into our target dir so a mvn clean will get
  # clean it up and force us create a new one.
  f="${BK_HOME}/target/cached_classpath.txt"
  if [ ! -f "${f}" ]
  then
    ${MVN} -f "${BK_HOME}/pom.xml" dependency:build-classpath -Dmdep.outputFile="${f}" &> /dev/null
  fi
  BOOKIE_CLASSPATH=${CLASSPATH}:`cat "${f}"`
}

if [ -d "$BK_HOME/lib" ]; then
  for i in $BK_HOME/lib/*.jar; do
    BOOKIE_CLASSPATH=$BOOKIE_CLASSPATH:$i
  done
else
  add_maven_deps_to_classpath
fi

if [ $COMMAND == "shell" ]; then
    DEFAULT_LOG_CONF=$BK_HOME/conf/log4j2.shell.xml
    if [[ $1 == "-localbookie"  ]]; then
        if [[ $2 == *:* ]];
        then
            BOOKIE_CONF=$DEFAULT_LOCALBOOKIES_CONFIG_DIR/$2.conf
            shift 2
        else
            BOOKIE_CONF=$DEFAULT_LOCALBOOKIES_CONFIG_DIR/baseconf.conf
            shift
        fi
    fi
fi

if [ $COMMAND == "jmx" ]; then
    if [[ $1 == "-localbookie" ]]; then
        BOOKIE_CONF=$DEFAULT_LOCALBOOKIES_CONFIG_DIR/$2.conf
        shift 2
    fi
fi


if [ -z "$BOOKIE_VERSION" ]; then
  BOOKIE_VERSION=$DEFAULT_VERSION
fi

if [ -z "$SFSTORE_CLUSTER_NAME" ]; then
  SFSTORE_CLUSTER_NAME=$DEFAULT_CLUSTER_NAME
fi

if [ -z "$BOOKIE_CONF" ]; then
  BOOKIE_CONF=$DEFAULT_CONF
fi

if [ -z "$REPLICATION_CONF" ]; then
  REPLICATION_CONF=$DEFAULT_REPLICATION_CONF
fi

if [ -z "$BOOKIE_LOG_CONF" ]; then
  BOOKIE_LOG_CONF=$DEFAULT_LOG_CONF
fi

BOOKIE_LOG_FORMAT=${BOOKIE_LOG_FORMAT:-"$HOSTNAME.sfstore"}
BOOKIE_LOG_FILE_PATTERN=${BOOKIE_LOG_FILE_PATTERN:-"$HOSTNAME.sfstore.%d{yyyyMMddHH}.log"}
BOOKIE_LOG_FILE=${BOOKIE_LOG_FILE:-"$BOOKIE_LOG_FORMAT.log"}
BOOKIE_CLASSPATH="$BOOKIE_JAR:$BOOKIE_CLASSPATH:$BOOKIE_EXTRA_CLASSPATH"
BOOKIE_CLASSPATH="`dirname $BOOKIE_LOG_CONF`:$BOOKIE_CLASSPATH"
OPTS="$OPTS -Dlog4j.configurationFile=`basename $BOOKIE_LOG_CONF`"

#Allow the jvm to use the limits of the host
OPTS="$OPTS -XX:-MaxFDLimit "

OPTS="-cp $BOOKIE_CLASSPATH $OPTS"

OPTS="$OPTS $BOOKIE_EXTRA_OPTS"

# Disable ipv6 as it can cause issues
OPTS="$OPTS -Djava.net.preferIPv4Stack=true"

#Cache FQDN that we retrieve for an hour
OPTS="$OPTS -Dnetworkaddress.cache.ttl=3600"

# log directory & file
BOOKIE_ROOT_LOGGER=${BOOKIE_ROOT_LOGGER:-"INFO,CONSOLE"}
BOOKIE_LOG_DIR=${BOOKIE_LOG_DIR:-"$BK_HOME/logs"}
BOOKIE_LOG_FILE=${BOOKIE_LOG_FILE:-"bookkeeper-server.log"}
BOOKIE_GC_LOGS_FILE="${BOOKIE_LOG_DIR}/bk-gc-log"
BOOKIE_LOG_LEVEL=${BOOKIE_LOG_LEVEL:-"INFO"}
BOOKIE_LOG_FILE_SIZE=${BOOKIE_LOG_FILE_SIZE:-"100MB"}
BOOKIE_LOG_FILE_COUNT=${BOOKIE_LOG_FILE_COUNT:-"10"}
#Delete logs with a last modified older than "P[days]D"
BOOKIE_LOG_MAX_AGE=${BOOKIE_LOG_MAX_AGE:-"P20D"}

AR_GC_LOGS_FILE="${BOOKIE_LOG_DIR}/ar-gc-log"

#Configure log configuration system properties
OPTS="$OPTS -Dbookkeeper.root.logger=$BOOKIE_ROOT_LOGGER"
OPTS="$OPTS -Dbookkeeper.log.dir=$BOOKIE_LOG_DIR"
OPTS="$OPTS -Dbookkeeper.log.file=$BOOKIE_LOG_FILE"
OPTS="$OPTS -Dbookkeeper.log.pattern=$BOOKIE_LOG_FILE_PATTERN"
OPTS="$OPTS -Dbookkeeper.log.max.fileAge=$BOOKIE_LOG_MAX_AGE"
#Make all loggers asynchronous
OPTS="$OPTS -DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"

if [ $COMMAND == "shell" ]; then
    OPTS="$OPTS -Xloggc:/tmp/bookieshellgclog"
elif [[ $COMMAND == "autorecovery" ]]; then
    OPTS="$OPTS -Xloggc:$AR_GC_LOGS_FILE -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=$BOOKIE_LOG_FILE_COUNT -XX:GCLogFileSize=100M"
else
    OPTS="$OPTS -Xloggc:$BOOKIE_GC_LOGS_FILE -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=$BOOKIE_LOG_FILE_COUNT -XX:GCLogFileSize=100M"
fi

OPTS="$OPTS -Dcluster.loc=$SFSTORE_CLUSTER_NAME"
OPTS="$OPTS -Dbookkeeper.sfstore.version=$BOOKIE_VERSION"
OPTS="$OPTS -Dbookkeeper.log.level=$BOOKIE_LOG_LEVEL"
OPTS="$OPTS -Dbookkeeper.log.filesize=$BOOKIE_LOG_FILE_SIZE"
OPTS="$OPTS -Dbookkeeper.log.filecount=$BOOKIE_LOG_FILE_COUNT"

#Change to BK_HOME to support relative paths
cd "$BK_HOME"
if [ $COMMAND == "bookie" ]; then
  exec $JAVA $OPTS $JMX_ARGS org.apache.bookkeeper.proto.BookieServer --conf $BOOKIE_CONF $@
elif [ $COMMAND == "autorecovery" ]; then
    exec $JAVA $OPTS org.apache.bookkeeper.replication.AutoRecoveryMain -c $REPLICATION_CONF $@
elif [ $COMMAND == "localbookie" ]; then
    NUMBER=$1
    shift
    exec $JAVA $OPTS $JMX_ARGS org.apache.bookkeeper.util.LocalBookKeeper $NUMBER $BOOKIE_CONF $@
elif [ $COMMAND == "upgrade" ]; then
  exec $JAVA $OPTS org.apache.bookkeeper.bookie.FileSystemUpgrade --conf $BOOKIE_CONF $@
elif [ $COMMAND == "shell" ]; then
    exec $JAVA ${OPTS/-XX:+PrintStringTableStatistics/} org.apache.bookkeeper.bookie.BookieShell -conf $BOOKIE_CONF $@
elif [ $COMMAND == "help" ]; then
    bookkeeper_help;
elif [ $COMMAND == "jmx" ]; then
    getPortNum() {
        while read line; do
            trimmedline=`echo $line | tr -d ' '`
            if [[ $trimmedline == bookiePort=* ]]; then
                PORT_NUM=${trimmedline/#bookiePort=/}
                break
            fi
        done < $BOOKIE_CONF
    }
    getPortNum
    if [[ -z "$PORT_NUM" ]]; then
        echo "Something went wrong, bookiePort is not found in BookieConfig file: $BOOKIE_CONF"
        exit 1
    fi
# get JMX command
    JMX_COMMAND=$1
    JMX_EXECUTION_COMMAND="exec $JAVA -jar $BK_HOME/bin/jmxterm-1.0-alpha-4-uber.jar -l localhost:$JMX_PORT_NUM -n"
    if [[ -z "$JMX_COMMAND" ]]; then
        jmx_help;
    elif [ $JMX_COMMAND == "forcecompaction" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=Compaction-GarbageCollector"$'\n'"run forceCompaction"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "suspendmajorgc" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=Compaction-GarbageCollector"$'\n'"run suspendMajorGC"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "suspendminorgc" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=Compaction-GarbageCollector"$'\n'"run suspendMinorGC"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "resumeminorgc" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=Compaction-GarbageCollector"$'\n'"run resumeMinorGC"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "resumemajorgc" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=Compaction-GarbageCollector"$'\n'"run resumeMajorGC"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "flushbookie" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=SyncThread"$'\n'"run flushBookie"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "openfilelimit" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=LedgerCache"$'\n'"get OpenFileLimit"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "pagelimit" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=LedgerCache"$'\n'"get PageLimit"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "pagesize" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=LedgerCache"$'\n'"get PageSize"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "pagecount" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=LedgerCache"$'\n'"get PageCount"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "numopenledgers" ]; then
        echo "bean org.apache.BookKeeperService:name0=BookieServer_$PORT_NUM,name1=Bookie,name2=LedgerCache"$'\n'"get NumOpenLedgers"$'\n'"bye" | $JMX_EXECUTION_COMMAND
    elif [ $JMX_COMMAND == "help" ]; then
        jmx_help;
    else
        echo "Unknown JMX Command: $JMX_COMMAND"
        jmx_help
    fi
else
  exec $JAVA $OPTS $COMMAND $@
fi





