## BookKeeperProxy settings section
# Hostname that the BKProxy Server binds to
# This may be a hostname or an IP address.
# Default is localhost.
# bkProxyHostname=localhost

# Port that BKProxy Server listen on
# bkProxyPort=5555

# BKProxy ServerSocketChannel receive Buffer size - 64k
# serverChannelReceiveBufferSize=65536

# ClientSocketChannel receive Buffer size - 64k
# clientChannelReceiveBufferSize=65536

# ClientSocketChannel send Buffer size - 64K
# clientChannelSendBufferSize=65536

# Maximum number of Connections/Threads
# workerThreadLimit=1000

# improved client throughput (3200 reads/sec to 7300 reads/sec on ssd)
# did not get any imrpovements with increased values
numWorkerThreads=8
numChannelsPerBookie=12
clientTcpNoDelay=true

# despite all efforts, with disk shared by ledger and journal, it is possible to get
# request latency spike at 99.9% to over 4 sec as disk gets very busy under continous heavy load.
# latencies increased to offset this, considering that upstream dependencies do not handle 
# timed out requests gracefully. But we need to make sure that there are couple of chances
# for selecting new ensemble if bookies get busy.
addEntryTimeoutSec=5
addEntryQuorumTimeoutSec=20

# Make readtimeout same as addEntryTimeoutSec.
readEntryTimeoutSec=5

# Allowed Maximum Fragment Size - 1 MB
# maxFragSize=1048576

# TCP NODelay 
# tcpNoDelay=true

# Password
# password=foo

# Ensemble Size 
# ensembleSize=3

# Quorum Size for Write 
# writeQuorumSize=3

# Quorum Size for Acknowledge
# ackQuorumSize=2

# DigestType Values:MAC, CRC32, DUMMY
# digestType=CRC32

# Interval between sending an explicit LAC in seconds
explicitLacInterval=1

# Get the period of time after which a speculative entry read should be triggered
# in milliseconds
speculativeReadTimeout=30

# Enable auto detection of the digest type on read.
enableDigestTypeAutodetection=true

## BookKeeper client settings section
# ZooKeeper connect string
# zkServers=localhost:2181

# Ledger Manager Class
# What kind of ledger manager is used to manage how ledgers are stored, managed
# and garbage collected. Try to read 'BookKeeper Internals' for detail info.
# 'ledgerManagerType' is deprecated and it is replaced by 'ledgerManagerFactoryClass'
ledgerManagerFactoryClass=org.apache.bookkeeper.meta.LongHierarchicalLedgerManagerFactory

# The number of threads to keep in the ThreadPoolExecutor, which hosts 
# BKProxyWorker runnables, even if they are idle.
#corePoolSize=10

############## Stat configs

#Prefix for these statistics
#statsPrefix=pxy

#Setting this to true will enable the logging for BK, outputting metrics to files
enableStatistics=true

# Stats Provider Class
statsProviderClass=org.apache.bookkeeper.stats.CodahaleMetricsProvider

# output frequency, default is 60s
codahaleStatsOutputFrequencySeconds=30

# directory for appending metrics in csv files
#codahaleStatsCSVEndpoint=/media/data/stats/


#Port to host metrics on. If null, stats will not be hosted on a servlet.
statsServletPort=2183
#Context path after domain to monitor. Must begin with / and not end with /
servletContextPath=/stats
#Endpoint to host metrics on. Hosted after [domain]/[servletContextPath]/. Must begin with / and not with /
servletEndpoint=/metrics.json

############## End stat configs

# When the number of threads is greater than the corePoolSize in the ThreadPoolExecutor,  
# this is the maximum time that excess idle threads will wait for new tasks before terminating
# TimeUnit is in milliseconds
#corePoolKeepAliveTime=5000

# The number of read-handles that will be cached.
# Defaults to 3K
#readHandleCacheLen=3000

# The number of milliseconds to keep the read-handle cache alive.
# Defaults to -1 indicating unlimited
#readHandleTTL=-1

#Restrict users who can start-up this process to those specified below
#permittedStartupUsers=

# path to the script that maps bookie IP to rack name needed for rackaware ensemble placement
networkTopologyScriptFileName=/sdb/sdbbuild/proxy/bin/bookieToRacks.py

# Entry formatter class to format entries. default is String formatter
entryFormatterClass=org.apache.bookkeeper.util.HexDumpEntryFormatter
# LedgerId formatter class to format ledgerids. default value is UUID formatter
ledgerIdFormatterClass=org.apache.bookkeeper.util.LedgerIdFormatter$UUIDLedgerIdFormatter

# enable disk weight based placement policy
diskWeightBasedPlacementEnabled=true

# The path to class that provides client-side security.
clientSecurityProviderFactoryClass=org.apache.bookkeeper.security.SSLContextFactory

# How long to wait (in seconds)  before successive health checks of security details.
# Defaults to 1 hour in seconds.
# clientSecurityProviderExpiryDetectionTimeSecs=3600

# SSL provider (JDK or OpenSSL)
#sslProvider=OpenSSL

# The path to class that provides security.
#sslProviderFactoryClass=org.apache.bookkeeper.security.SSLContextFactory

# Type of security used by BKClient
#sslClientAuthentication=true

# BKClient Keystore type
#clientKeyStoreType=JKS

# BKClient Keystore location (path)
#clientKeyStore=

# BKClient Keystore password path, if the keystore is protected by a password
#clientKeyStorePasswordPath=

# BKClient Truststore type
#clientTrustStoreType=

# BKClient Truststore location (path)
#clientTrustStore=

# BKClient Truststore password path, if the truststore is protected by a password
#clientTrustStorePasswordPath=
